单例模式
单例模式看是简单 实则内含陷阱。
1.如果不加以处理，多线程会产生多个对象。
2.在Java指令中创建对象和赋值操作是分开进行的。instance = new Singleton();语句是分两步执行（赋值和创建对象初始化）的。但是JVM并不保证这两个操作的先后顺序。
3.JVM内部的机制能够保证当一个类被加载的时候，这个类的加载过程是线程互斥的。但是：如果在构造函数中抛出异常，实例将永远得不到创建。
4.如果构造函数可能抛出异常就用Synchronized关键字防止多线程并发。如果能保证构造函数不会抛出异常，最好使用内部类静态加载的方式。
5.用静态构造函数和内部类创建对象方法比较：
  1.静态构造块是在程序加载时允许，如果构造函数加载时间过长会影响。
  2.有些单例类的构造是需要一定条件的。如果放在静态构造块中，那么在这个类被调用时，就会被执行。这样是可能会产生异常的。











