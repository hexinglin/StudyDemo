
外观模式是为了解决类与类之家的依赖关系的，
像spring一样，可以将类和类之间的关系配置到配置文件中，
而外观模式就是将他们的关系放在一个Facade类中，降低了类类之间的耦合度，该模式中没有涉及到接口，


心得：
1.其实外观模式可以当做控制器处理，可以是控制类，他的作用是管理多个有关联的对象。防止多个对象相互持有和调用混乱的问题。
2.使用外观模式可以简化使用逻辑，把一些固定的控制逻辑封装（如电脑），用户只需要对电脑启动或者关闭，不用去理会cpu等逻辑。
毕竟cpu和内存这些应该是有一定的调用顺序的。



